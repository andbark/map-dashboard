{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewbarksdale/Desktop/Map%20Dashboard/map-dashboard/src/utils/csvParser.ts"],"sourcesContent":["import Papa from 'papaparse';\nimport { School } from '@/types';\n\nexport function parseCSV(file: File): Promise<School[]> {\n  return new Promise((resolve, reject) => {\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        const schools: School[] = [];\n        \n        // Process each row from the CSV\n        results.data.forEach((row: any) => {\n          // Map CSV columns to our School type\n          const school: School = {\n            name: row['School Name'] || '',\n            district: row['School District'] || '',\n            address: row['Address'] || '',\n            city: row['City'] || '',\n            state: row['State'] || '',\n            zipCode: row['Zip Code'] || '',\n          };\n          \n          // Only add valid schools with required data\n          if (school.name && school.address && school.city && school.state) {\n            schools.push(school);\n          }\n        });\n        \n        resolve(schools);\n      },\n      error: (error) => {\n        reject(error);\n      }\n    });\n  });\n} "],"names":[],"mappings":";;;AAAA;;AAGO,SAAS,SAAS,IAAU;IACjC,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,gJAAA,CAAA,UAAI,CAAC,KAAK,CAAC,MAAM;YACf,QAAQ;YACR,gBAAgB;YAChB,UAAU,CAAC;gBACT,MAAM,UAAoB,EAAE;gBAE5B,gCAAgC;gBAChC,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpB,qCAAqC;oBACrC,MAAM,SAAiB;wBACrB,MAAM,GAAG,CAAC,cAAc,IAAI;wBAC5B,UAAU,GAAG,CAAC,kBAAkB,IAAI;wBACpC,SAAS,GAAG,CAAC,UAAU,IAAI;wBAC3B,MAAM,GAAG,CAAC,OAAO,IAAI;wBACrB,OAAO,GAAG,CAAC,QAAQ,IAAI;wBACvB,SAAS,GAAG,CAAC,WAAW,IAAI;oBAC9B;oBAEA,4CAA4C;oBAC5C,IAAI,OAAO,IAAI,IAAI,OAAO,OAAO,IAAI,OAAO,IAAI,IAAI,OAAO,KAAK,EAAE;wBAChE,QAAQ,IAAI,CAAC;oBACf;gBACF;gBAEA,QAAQ;YACV;YACA,OAAO,CAAC;gBACN,OAAO;YACT;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewbarksdale/Desktop/Map%20Dashboard/map-dashboard/src/components/CSVUpload.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { parseCSV } from '@/utils/csvParser';\nimport { School } from '@/types';\n\ninterface CSVUploadProps {\n  onDataLoaded: (schools: School[]) => void;\n  setLoading: (loading: boolean) => void;\n}\n\nexport default function CSVUpload({ onDataLoaded, setLoading }: CSVUploadProps) {\n  const [isDragging, setIsDragging] = useState(false);\n  const [fileName, setFileName] = useState<string | null>(null);\n  \n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  \n  const handleDragLeave = () => {\n    setIsDragging(false);\n  };\n  \n  const handleDrop = async (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    const files = e.dataTransfer.files;\n    if (files && files.length > 0) {\n      await processFile(files[0]);\n    }\n  };\n  \n  const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      await processFile(files[0]);\n    }\n  };\n  \n  const processFile = async (file: File) => {\n    if (file.type !== 'text/csv' && !file.name.endsWith('.csv')) {\n      alert('Please upload a CSV file');\n      return;\n    }\n    \n    setFileName(file.name);\n    setLoading(true);\n    \n    try {\n      const schools = await parseCSV(file);\n      onDataLoaded(schools);\n    } catch (error) {\n      console.error('Error parsing CSV:', error);\n      alert('Error parsing CSV file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSampleDownload = () => {\n    window.open('/sample-schools.csv', '_blank');\n  };\n  \n  return (\n    <div className=\"w-full\">\n      <div \n        className={`border-2 border-dashed rounded-lg text-center cursor-pointer transition-all p-8 ${\n          isDragging \n            ? 'border-indigo-500 bg-indigo-50' \n            : 'border-gray-300 hover:border-indigo-300 hover:bg-gray-50'\n        }`}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n        onClick={() => document.getElementById('file-upload')?.click()}\n      >\n        <input \n          id=\"file-upload\" \n          type=\"file\" \n          accept=\".csv\" \n          className=\"hidden\" \n          onChange={handleFileChange} \n        />\n        \n        {fileName ? (\n          <div className=\"py-2\">\n            <div className=\"mb-3 text-indigo-600\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n            </div>\n            <p className=\"text-gray-900 font-medium mb-1\">File loaded: <span className=\"font-semibold text-indigo-600\">{fileName}</span></p>\n            <p className=\"text-sm text-gray-600 mb-3\">Click or drop another file to replace</p>\n            <button\n              className=\"btn-primary text-sm inline-flex items-center\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onDataLoaded([]);\n                setFileName(null);\n              }}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n              </svg>\n              Clear File\n            </button>\n          </div>\n        ) : (\n          <div className=\"py-8\">\n            <svg \n              xmlns=\"http://www.w3.org/2000/svg\" \n              className=\"h-12 w-12 mx-auto mb-3 text-indigo-500\"\n              fill=\"none\" \n              viewBox=\"0 0 24 24\" \n              stroke=\"currentColor\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={1.5} \n                d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" \n              />\n            </svg>\n            <p className=\"text-lg font-medium text-gray-900 mb-1\">Drag and drop your CSV file here</p>\n            <p className=\"text-sm text-gray-600 mb-4\">or click to select a file</p>\n            <button \n              onClick={(e) => {\n                e.stopPropagation();\n                handleSampleDownload();\n              }}\n              className=\"btn-secondary text-sm inline-flex items-center\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n              </svg>\n              Download Sample CSV\n            </button>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"mt-4 bg-white p-4 rounded-lg border border-gray-200\">\n        <p className=\"font-medium text-gray-900 mb-2 text-sm\">Required CSV Columns:</p>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 text-sm text-gray-700\">\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n            School Name\n          </div>\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n            School District\n          </div>\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n            Address\n          </div>\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n            City\n          </div>\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n            State\n          </div>\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n            Zip Code\n          </div>\n        </div>\n        <p className=\"text-xs text-gray-500 mt-3\">After upload, addresses will be automatically geocoded for map display.</p>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewbarksdale/Desktop/Map%20Dashboard/map-dashboard/src/components/SchoolList.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { School } from '@/types';\n\ninterface SchoolListProps {\n  schools: School[];\n  selectedSchool: School | null;\n  setSelectedSchool: (school: School | null) => void;\n  isCollapsed?: boolean;\n  setIsCollapsed?: (collapsed: boolean) => void;\n}\n\nexport default function SchoolList({ \n  schools, \n  selectedSchool, \n  setSelectedSchool,\n  isCollapsed: externalIsCollapsed,\n  setIsCollapsed: externalSetIsCollapsed\n}: SchoolListProps) {\n  // Use internal state if no external state is provided\n  const [internalIsCollapsed, setInternalIsCollapsed] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Use either external or internal state\n  const isCollapsed = externalIsCollapsed !== undefined ? externalIsCollapsed : internalIsCollapsed;\n  const setIsCollapsed = externalSetIsCollapsed || setInternalIsCollapsed;\n\n  // Filter schools based on search query\n  const filteredSchools = searchQuery.trim() === '' \n    ? schools \n    : schools.filter(school => {\n        const query = searchQuery.toLowerCase();\n        return (\n          school.name.toLowerCase().includes(query) ||\n          school.district.toLowerCase().includes(query) ||\n          school.address.toLowerCase().includes(query) ||\n          school.city.toLowerCase().includes(query) ||\n          school.state.toLowerCase().includes(query) ||\n          school.zipCode.toLowerCase().includes(query)\n        );\n      });\n  \n  const schoolCount = filteredSchools.length;\n  const geocodingPendingCount = filteredSchools.filter(school => \n    !school.latitude || !school.longitude\n  ).length;\n  \n  return (\n    <div className=\"h-full overflow-hidden bg-white rounded-lg shadow border border-gray-200 flex flex-col\">\n      <div \n        className=\"sticky top-0 bg-white px-4 py-3 border-b border-gray-200 flex justify-between items-center cursor-pointer hover:bg-gray-50\"\n        onClick={() => setIsCollapsed(!isCollapsed)}\n      >\n        <div>\n          <h2 className=\"font-bold text-gray-900\">{isCollapsed ? 'Schools' : `Schools (${schools.length})`}</h2>\n          {!isCollapsed && geocodingPendingCount > 0 && (\n            <p className=\"text-xs text-gray-500 mt-0.5\">\n              {geocodingPendingCount} pending geocoding\n            </p>\n          )}\n        </div>\n        <button \n          className=\"text-indigo-600 hover:text-indigo-800 transition-colors flex items-center gap-1\"\n          aria-label={isCollapsed ? \"Expand school list\" : \"Collapse school list\"}\n        >\n          {isCollapsed ? (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 8h16M4 16h16\" />\n            </svg>\n          ) : (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          )}\n        </button>\n      </div>\n      \n      {!isCollapsed && (\n        <>\n          {schools.length > 0 && (\n            <div className=\"p-3\">\n              <div className=\"relative\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-4 w-4 absolute left-3 top-3 text-gray-400\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                  />\n                </svg>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search schools...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"w-full p-2 pl-10 pr-10 border border-gray-300 rounded-md text-sm focus:ring-indigo-500 focus:border-indigo-500\"\n                />\n                {searchQuery && (\n                  <button\n                    onClick={() => setSearchQuery('')}\n                    className=\"absolute right-3 top-3 text-gray-400 hover:text-gray-600\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-4 w-4\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M6 18L18 6M6 6l12 12\"\n                      />\n                    </svg>\n                  </button>\n                )}\n              </div>\n              {searchQuery && (\n                <p className=\"mt-2 text-xs text-gray-500\">\n                  Found {schoolCount} {schoolCount === 1 ? 'school' : 'schools'} matching \"{searchQuery}\"\n                </p>\n              )}\n            </div>\n          )}\n          \n          <div className=\"overflow-auto flex-grow\">\n            {schools.length === 0 ? (\n              <div className=\"p-8 text-center\">\n                <div className=\"bg-gray-50 rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                  </svg>\n                </div>\n                <p className=\"font-medium text-gray-900\">No schools imported yet</p>\n                <p className=\"text-sm text-gray-500 mt-1\">Upload a CSV file to get started</p>\n              </div>\n            ) : filteredSchools.length === 0 ? (\n              <div className=\"p-8 text-center\">\n                <div className=\"bg-gray-50 rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <p className=\"font-medium text-gray-900\">No schools match your search</p>\n                <button \n                  className=\"mt-2 text-sm text-indigo-600 hover:text-indigo-800 underline\"\n                  onClick={() => setSearchQuery('')}\n                >\n                  Clear search\n                </button>\n              </div>\n            ) : (\n              <ul className=\"p-2\">\n                {filteredSchools.map((school) => (\n                  <li \n                    key={school.id || `${school.name}-${school.address}`}\n                    className={`p-3 hover:bg-gray-50 cursor-pointer transition-colors rounded-md my-1 ${\n                      selectedSchool && selectedSchool.name === school.name && \n                      selectedSchool.address === school.address \n                        ? 'bg-indigo-50 border-l-4 border-indigo-500' \n                        : ''\n                    }`}\n                    onClick={() => setSelectedSchool(school)}\n                  >\n                    <div className=\"flex justify-between items-start\">\n                      <div>\n                        <h3 className=\"font-medium text-gray-900\">{school.name}</h3>\n                        <p className=\"text-sm text-gray-500\">{school.district}</p>\n                      </div>\n                      {(!school.latitude || !school.longitude) && (\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                          </svg>\n                          Pending\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"mt-1 text-sm\">\n                      <p className=\"text-gray-700\">{school.address}</p>\n                      <p className=\"text-gray-700\">{school.city}, {school.state} {school.zipCode}</p>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;;AAWe,SAAS,WAAW,EACjC,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,aAAa,mBAAmB,EAChC,gBAAgB,sBAAsB,EACtB;;IAChB,sDAAsD;IACtD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,wCAAwC;IACxC,MAAM,cAAc,wBAAwB,YAAY,sBAAsB;IAC9E,MAAM,iBAAiB,0BAA0B;IAEjD,uCAAuC;IACvC,MAAM,kBAAkB,YAAY,IAAI,OAAO,KAC3C,UACA,QAAQ,MAAM,CAAC,CAAA;QACb,MAAM,QAAQ,YAAY,WAAW;QACrC,OACE,OAAO,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,UACnC,OAAO,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,UACvC,OAAO,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,UACtC,OAAO,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,UACnC,OAAO,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,UACpC,OAAO,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC;IAE1C;IAEJ,MAAM,cAAc,gBAAgB,MAAM;IAC1C,MAAM,wBAAwB,gBAAgB,MAAM,CAAC,CAAA,SACnD,CAAC,OAAO,QAAQ,IAAI,CAAC,OAAO,SAAS,EACrC,MAAM;IAER,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,WAAU;gBACV,SAAS,IAAM,eAAe,CAAC;;kCAE/B,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAA2B,cAAc,YAAY,CAAC,SAAS,EAAE,QAAQ,MAAM,CAAC,CAAC,CAAC;;;;;;4BAC/F,CAAC,eAAe,wBAAwB,mBACvC,6LAAC;gCAAE,WAAU;;oCACV;oCAAsB;;;;;;;;;;;;;kCAI7B,6LAAC;wBACC,WAAU;wBACV,cAAY,cAAc,uBAAuB;kCAEhD,4BACC,6LAAC;4BAAI,OAAM;4BAA6B,WAAU;4BAAU,MAAK;4BAAO,SAAQ;4BAAY,QAAO;sCACjG,cAAA,6LAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;iDAGvE,6LAAC;4BAAI,OAAM;4BAA6B,WAAU;4BAAU,MAAK;4BAAO,SAAQ;4BAAY,QAAO;sCACjG,cAAA,6LAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;YAM5E,CAAC,6BACA;;oBACG,QAAQ,MAAM,GAAG,mBAChB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,OAAM;wCACN,WAAU;wCACV,MAAK;wCACL,SAAQ;wCACR,QAAO;kDAEP,cAAA,6LAAC;4CACC,eAAc;4CACd,gBAAe;4CACf,aAAa;4CACb,GAAE;;;;;;;;;;;kDAGN,6LAAC;wCACC,MAAK;wCACL,aAAY;wCACZ,OAAO;wCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wCAC9C,WAAU;;;;;;oCAEX,6BACC,6LAAC;wCACC,SAAS,IAAM,eAAe;wCAC9B,WAAU;kDAEV,cAAA,6LAAC;4CACC,OAAM;4CACN,WAAU;4CACV,MAAK;4CACL,SAAQ;4CACR,QAAO;sDAEP,cAAA,6LAAC;gDACC,eAAc;gDACd,gBAAe;gDACf,aAAa;gDACb,GAAE;;;;;;;;;;;;;;;;;;;;;;4BAMX,6BACC,6LAAC;gCAAE,WAAU;;oCAA6B;oCACjC;oCAAY;oCAAE,gBAAgB,IAAI,WAAW;oCAAU;oCAAY;oCAAY;;;;;;;;;;;;;kCAM9F,6LAAC;wBAAI,WAAU;kCACZ,QAAQ,MAAM,KAAK,kBAClB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,OAAM;wCAA6B,WAAU;wCAA0B,MAAK;wCAAO,SAAQ;wCAAY,QAAO;kDACjH,cAAA,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAK,GAAE;;;;;;;;;;;;;;;;8CAG3E,6LAAC;oCAAE,WAAU;8CAA4B;;;;;;8CACzC,6LAAC;oCAAE,WAAU;8CAA6B;;;;;;;;;;;mCAE1C,gBAAgB,MAAM,KAAK,kBAC7B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,OAAM;wCAA6B,WAAU;wCAA0B,MAAK;wCAAO,SAAQ;wCAAY,QAAO;kDACjH,cAAA,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAK,GAAE;;;;;;;;;;;;;;;;8CAG3E,6LAAC;oCAAE,WAAU;8CAA4B;;;;;;8CACzC,6LAAC;oCACC,WAAU;oCACV,SAAS,IAAM,eAAe;8CAC/B;;;;;;;;;;;iDAKH,6LAAC;4BAAG,WAAU;sCACX,gBAAgB,GAAG,CAAC,CAAC,uBACpB,6LAAC;oCAEC,WAAW,CAAC,sEAAsE,EAChF,kBAAkB,eAAe,IAAI,KAAK,OAAO,IAAI,IACrD,eAAe,OAAO,KAAK,OAAO,OAAO,GACrC,8CACA,IACJ;oCACF,SAAS,IAAM,kBAAkB;;sDAEjC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;;sEACC,6LAAC;4DAAG,WAAU;sEAA6B,OAAO,IAAI;;;;;;sEACtD,6LAAC;4DAAE,WAAU;sEAAyB,OAAO,QAAQ;;;;;;;;;;;;gDAEtD,CAAC,CAAC,OAAO,QAAQ,IAAI,CAAC,OAAO,SAAS,mBACrC,6LAAC;oDAAK,WAAU;;sEACd,6LAAC;4DAAI,OAAM;4DAA6B,WAAU;4DAAe,MAAK;4DAAO,SAAQ;4DAAY,QAAO;sEACtG,cAAA,6LAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;wDACjE;;;;;;;;;;;;;sDAKZ,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DAAiB,OAAO,OAAO;;;;;;8DAC5C,6LAAC;oDAAE,WAAU;;wDAAiB,OAAO,IAAI;wDAAC;wDAAG,OAAO,KAAK;wDAAC;wDAAE,OAAO,OAAO;;;;;;;;;;;;;;mCAzBvE,OAAO,EAAE,IAAI,GAAG,OAAO,IAAI,CAAC,CAAC,EAAE,OAAO,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;;;AAoCxE;GA3LwB;KAAA","debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewbarksdale/Desktop/Map%20Dashboard/map-dashboard/src/utils/hubspot.ts"],"sourcesContent":["import { School } from '@/types';\n\n// HubSpot API base URL\nconst HUBSPOT_API_BASE = 'https://api.hubapi.com/crm/v3';\n\n/**\n * Fetch schools from HubSpot CRM\n * @param apiKey Your HubSpot API key\n * @returns Array of School objects\n */\nexport async function fetchSchoolsFromHubSpot(apiKey: string): Promise<School[]> {\n  try {\n    // Fetch companies (schools) from HubSpot\n    const response = await fetch(`${HUBSPOT_API_BASE}/objects/companies?limit=100`, {\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`HubSpot API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    // Map HubSpot companies to School objects\n    const schools: School[] = data.results.map((company: any) => {\n      // Extract properties from HubSpot company\n      const properties = company.properties;\n      \n      return {\n        id: company.id,\n        name: properties.name || '',\n        district: properties.school_district || '',\n        address: properties.address || '',\n        city: properties.city || '',\n        state: properties.state || '',\n        zipCode: properties.zip || '',\n        // If latitude/longitude are stored in HubSpot\n        latitude: properties.latitude ? parseFloat(properties.latitude) : undefined,\n        longitude: properties.longitude ? parseFloat(properties.longitude) : undefined\n      };\n    });\n\n    return schools;\n  } catch (error) {\n    console.error('Error fetching from HubSpot:', error);\n    throw error;\n  }\n}\n\n/**\n * Import schools from the map dashboard to HubSpot\n * @param apiKey Your HubSpot API key\n * @param schools Array of School objects to import\n * @returns Success status\n */\nexport async function importSchoolsToHubSpot(apiKey: string, schools: School[]): Promise<boolean> {\n  try {\n    // Batch create companies in HubSpot\n    // Note: HubSpot batch API allows up to 100 objects per request\n    const BATCH_SIZE = 100;\n    \n    for (let i = 0; i < schools.length; i += BATCH_SIZE) {\n      const batch = schools.slice(i, i + BATCH_SIZE);\n      \n      // Format schools for HubSpot API\n      const hubspotCompanies = batch.map(school => ({\n        properties: {\n          name: school.name,\n          school_district: school.district,\n          address: school.address,\n          city: school.city,\n          state: school.state,\n          zip: school.zipCode,\n          latitude: school.latitude?.toString(),\n          longitude: school.longitude?.toString(),\n          company_type: 'SCHOOL',\n          industry: 'EDUCATION'\n        }\n      }));\n      \n      // Send batch to HubSpot\n      const response = await fetch(`${HUBSPOT_API_BASE}/objects/companies/batch/create`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ inputs: hubspotCompanies })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HubSpot API error: ${response.status}`);\n      }\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error importing to HubSpot:', error);\n    return false;\n  }\n} "],"names":[],"mappings":";;;;AAEA,uBAAuB;AACvB,MAAM,mBAAmB;AAOlB,eAAe,wBAAwB,MAAc;IAC1D,IAAI;QACF,yCAAyC;QACzC,MAAM,WAAW,MAAM,MAAM,GAAG,iBAAiB,4BAA4B,CAAC,EAAE;YAC9E,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,QAAQ;gBACnC,gBAAgB;YAClB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,mBAAmB,EAAE,SAAS,MAAM,EAAE;QACzD;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,0CAA0C;QAC1C,MAAM,UAAoB,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;YAC1C,0CAA0C;YAC1C,MAAM,aAAa,QAAQ,UAAU;YAErC,OAAO;gBACL,IAAI,QAAQ,EAAE;gBACd,MAAM,WAAW,IAAI,IAAI;gBACzB,UAAU,WAAW,eAAe,IAAI;gBACxC,SAAS,WAAW,OAAO,IAAI;gBAC/B,MAAM,WAAW,IAAI,IAAI;gBACzB,OAAO,WAAW,KAAK,IAAI;gBAC3B,SAAS,WAAW,GAAG,IAAI;gBAC3B,8CAA8C;gBAC9C,UAAU,WAAW,QAAQ,GAAG,WAAW,WAAW,QAAQ,IAAI;gBAClE,WAAW,WAAW,SAAS,GAAG,WAAW,WAAW,SAAS,IAAI;YACvE;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM;IACR;AACF;AAQO,eAAe,uBAAuB,MAAc,EAAE,OAAiB;IAC5E,IAAI;QACF,oCAAoC;QACpC,+DAA+D;QAC/D,MAAM,aAAa;QAEnB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,KAAK,WAAY;YACnD,MAAM,QAAQ,QAAQ,KAAK,CAAC,GAAG,IAAI;YAEnC,iCAAiC;YACjC,MAAM,mBAAmB,MAAM,GAAG,CAAC,CAAA,SAAU,CAAC;oBAC5C,YAAY;wBACV,MAAM,OAAO,IAAI;wBACjB,iBAAiB,OAAO,QAAQ;wBAChC,SAAS,OAAO,OAAO;wBACvB,MAAM,OAAO,IAAI;wBACjB,OAAO,OAAO,KAAK;wBACnB,KAAK,OAAO,OAAO;wBACnB,UAAU,OAAO,QAAQ,EAAE;wBAC3B,WAAW,OAAO,SAAS,EAAE;wBAC7B,cAAc;wBACd,UAAU;oBACZ;gBACF,CAAC;YAED,wBAAwB;YACxB,MAAM,WAAW,MAAM,MAAM,GAAG,iBAAiB,+BAA+B,CAAC,EAAE;gBACjF,QAAQ;gBACR,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,QAAQ;oBACnC,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,QAAQ;gBAAiB;YAClD;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,mBAAmB,EAAE,SAAS,MAAM,EAAE;YACzD;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 1102, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewbarksdale/Desktop/Map%20Dashboard/map-dashboard/src/components/HubSpotIntegration.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { fetchSchoolsFromHubSpot, importSchoolsToHubSpot } from '@/utils/hubspot';\nimport { School } from '@/types';\n\ninterface HubSpotIntegrationProps {\n  schools: School[];\n  onSchoolsLoaded: (schools: School[]) => void;\n  setLoading: (loading: boolean) => void;\n}\n\nexport default function HubSpotIntegration({ \n  schools, \n  onSchoolsLoaded, \n  setLoading \n}: HubSpotIntegrationProps) {\n  const [apiKey, setApiKey] = useState('');\n  const [showApiInput, setShowApiInput] = useState(false);\n  const [message, setMessage] = useState<{ text: string; type: 'success' | 'error' | 'info' } | null>(null);\n\n  // Fetch schools from HubSpot\n  const handleFetchFromHubSpot = async () => {\n    if (!apiKey) {\n      setMessage({ text: 'Please enter your HubSpot API key', type: 'error' });\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setMessage({ text: 'Fetching schools from HubSpot...', type: 'info' });\n      \n      const hubspotSchools = await fetchSchoolsFromHubSpot(apiKey);\n      \n      if (hubspotSchools.length === 0) {\n        setMessage({ text: 'No schools found in HubSpot', type: 'info' });\n      } else {\n        onSchoolsLoaded(hubspotSchools);\n        setMessage({ \n          text: `Successfully imported ${hubspotSchools.length} schools from HubSpot`, \n          type: 'success' \n        });\n        // Hide API key input after successful fetch\n        setShowApiInput(false);\n      }\n    } catch (error) {\n      setMessage({ \n        text: `Error fetching from HubSpot: ${error instanceof Error ? error.message : 'Unknown error'}`, \n        type: 'error' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Import current schools to HubSpot\n  const handleExportToHubSpot = async () => {\n    if (!apiKey) {\n      setMessage({ text: 'Please enter your HubSpot API key', type: 'error' });\n      return;\n    }\n    \n    if (schools.length === 0) {\n      setMessage({ text: 'No schools to export', type: 'error' });\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setMessage({ text: 'Exporting schools to HubSpot...', type: 'info' });\n      \n      const success = await importSchoolsToHubSpot(apiKey, schools);\n      \n      if (success) {\n        setMessage({ \n          text: `Successfully exported ${schools.length} schools to HubSpot`, \n          type: 'success' \n        });\n        // Hide API key input after successful export\n        setShowApiInput(false);\n      } else {\n        setMessage({ text: 'Failed to export schools to HubSpot', type: 'error' });\n      }\n    } catch (error) {\n      setMessage({ \n        text: `Error exporting to HubSpot: ${error instanceof Error ? error.message : 'Unknown error'}`, \n        type: 'error' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex flex-col md:flex-row justify-between md:items-center mb-4\">\n        <button\n          className={`text-sm inline-flex items-center px-4 py-2 rounded-md transition-colors ${\n            showApiInput \n              ? 'text-indigo-800 bg-indigo-50' \n              : 'text-indigo-600 hover:bg-indigo-50'\n          }`}\n          onClick={() => setShowApiInput(!showApiInput)}\n        >\n          {showApiInput ? (\n            <>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n              Hide API Configuration\n            </>\n          ) : (\n            <>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n              Configure HubSpot\n            </>\n          )}\n        </button>\n      </div>\n      \n      {showApiInput && (\n        <div className=\"mb-6 p-5 rounded-lg bg-gray-50 border border-gray-200\">\n          <div className=\"mb-4\">\n            <label htmlFor=\"apiKey\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              HubSpot API Key\n            </label>\n            <input\n              type=\"password\"\n              id=\"apiKey\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500 bg-white text-gray-900\"\n              placeholder=\"Enter your HubSpot API key\"\n            />\n            <p className=\"mt-1 text-xs text-gray-500\">\n              Your API key is never stored on our servers and is only used for direct API calls.\n            </p>\n          </div>\n\n          <div className=\"bg-blue-50 border-l-4 border-blue-400 p-4 mb-4\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-blue-700\">\n                  HubSpot integration allows you to sync your school data between this dashboard and your HubSpot CRM.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {message && (\n        <div \n          className={`p-4 rounded-md mb-4 ${\n            message.type === 'success' \n              ? 'bg-green-50 text-green-800 border border-green-200' \n              : message.type === 'error'\n                ? 'bg-red-50 text-red-800 border border-red-200'\n                : 'bg-blue-50 text-blue-800 border border-blue-200'\n          }`}\n        >\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              {message.type === 'success' ? (\n                <svg className=\"h-5 w-5 text-green-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              ) : message.type === 'error' ? (\n                <svg className=\"h-5 w-5 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              ) : (\n                <svg className=\"h-5 w-5 text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              )}\n            </div>\n            <div className=\"ml-3 flex-1\">\n              <p className=\"text-sm\">{message.text}</p>\n            </div>\n            <div className=\"ml-auto pl-3\">\n              <div className=\"-mx-1.5 -my-1.5\">\n                <button\n                  onClick={() => setMessage(null)}\n                  className=\"inline-flex rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2\"\n                >\n                  <span className=\"sr-only\">Dismiss</span>\n                  <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"flex flex-wrap gap-3\">\n        <button\n          onClick={handleFetchFromHubSpot}\n          className=\"btn-primary inline-flex items-center\"\n          disabled={!apiKey}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n          </svg>\n          Import from HubSpot\n        </button>\n        \n        <button\n          onClick={handleExportToHubSpot}\n          className=\"btn-secondary inline-flex items-center text-indigo-600 border-indigo-200 hover:bg-indigo-50\"\n          disabled={!apiKey || schools.length === 0}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0l-4 4m4-4v12\" />\n          </svg>\n          Export to HubSpot\n        </button>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1628, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewbarksdale/Desktop/Map%20Dashboard/map-dashboard/src/utils/geocoding.ts"],"sourcesContent":["import { School } from '@/types';\n\n// Function to geocode an address using OpenStreetMap Nominatim API\nexport async function geocodeAddress(address: string): Promise<[number, number] | null> {\n  try {\n    const query = encodeURIComponent(`${address}`);\n    const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${query}&limit=1`, {\n      headers: {\n        'User-Agent': 'SchoolMapDashboard/1.0'\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Geocoding failed with status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    \n    if (data && data.length > 0) {\n      const { lat, lon } = data[0];\n      return [parseFloat(lat), parseFloat(lon)];\n    }\n    \n    return null;\n  } catch (error) {\n    console.error('Geocoding error:', error);\n    return null;\n  }\n}\n\n// Function to batch geocode a list of schools\nexport async function geocodeSchools(schools: School[]): Promise<School[]> {\n  const geocodedSchools: School[] = [];\n  \n  for (const school of schools) {\n    // Create a complete address string\n    const fullAddress = `${school.address}, ${school.city}, ${school.state} ${school.zipCode}`;\n    \n    // Add a delay to avoid rate limiting with the geocoding API\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    const coordinates = await geocodeAddress(fullAddress);\n    \n    if (coordinates) {\n      geocodedSchools.push({\n        ...school,\n        latitude: coordinates[0],\n        longitude: coordinates[1]\n      });\n    } else {\n      // Keep the school even if geocoding failed\n      geocodedSchools.push(school);\n    }\n  }\n  \n  return geocodedSchools;\n} "],"names":[],"mappings":";;;;AAGO,eAAe,eAAe,OAAe;IAClD,IAAI;QACF,MAAM,QAAQ,mBAAmB,GAAG,SAAS;QAC7C,MAAM,WAAW,MAAM,MAAM,CAAC,yDAAyD,EAAE,MAAM,QAAQ,CAAC,EAAE;YACxG,SAAS;gBACP,cAAc;YAChB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,SAAS,MAAM,EAAE;QACpE;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,QAAQ,KAAK,MAAM,GAAG,GAAG;YAC3B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE;YAC5B,OAAO;gBAAC,WAAW;gBAAM,WAAW;aAAK;QAC3C;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oBAAoB;QAClC,OAAO;IACT;AACF;AAGO,eAAe,eAAe,OAAiB;IACpD,MAAM,kBAA4B,EAAE;IAEpC,KAAK,MAAM,UAAU,QAAS;QAC5B,mCAAmC;QACnC,MAAM,cAAc,GAAG,OAAO,OAAO,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO,OAAO,EAAE;QAE1F,4DAA4D;QAC5D,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,MAAM,cAAc,MAAM,eAAe;QAEzC,IAAI,aAAa;YACf,gBAAgB,IAAI,CAAC;gBACnB,GAAG,MAAM;gBACT,UAAU,WAAW,CAAC,EAAE;gBACxB,WAAW,WAAW,CAAC,EAAE;YAC3B;QACF,OAAO;YACL,2CAA2C;YAC3C,gBAAgB,IAAI,CAAC;QACvB;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1687, "column": 0}, "map": {"version":3,"sources":["file:///Users/andrewbarksdale/Desktop/Map%20Dashboard/map-dashboard/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { School, MapViewport } from '@/types';\nimport CSVUpload from '@/components/CSVUpload';\nimport SchoolList from '@/components/SchoolList';\nimport HubSpotIntegration from '@/components/HubSpotIntegration';\nimport { geocodeSchools } from '@/utils/geocoding';\n\n// Import Map component dynamically to avoid SSR issues with Leaflet\nconst Map = dynamic(() => import('@/components/Map'), {\n  ssr: false,\n  loading: () => (\n    <div className=\"h-full w-full flex items-center justify-center bg-gray-50 rounded-lg\">\n      <div className=\"text-center\">\n        <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-indigo-600 mx-auto mb-2\"></div>\n        <p className=\"text-gray-700\">Loading map...</p>\n      </div>\n    </div>\n  ),\n});\n\nexport default function Home() {\n  const [schools, setSchools] = useState<School[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [geocoding, setGeocoding] = useState(false);\n  const [selectedSchool, setSelectedSchool] = useState<School | null>(null);\n  const [isListCollapsed, setIsListCollapsed] = useState(false);\n  const [viewport, setViewport] = useState<MapViewport>({\n    center: [39.8283, -98.5795], // Center of the United States\n    zoom: 4,\n  });\n\n  // Handle CSV data after import\n  const handleDataLoaded = async (importedSchools: School[]) => {\n    setSchools(importedSchools);\n    setGeocoding(true);\n    \n    // Geocode the imported schools\n    const geocodedSchools = await geocodeSchools(importedSchools);\n    setSchools(geocodedSchools);\n    setGeocoding(false);\n    \n    // Update viewport if we have schools with coordinates\n    const schoolsWithCoords = geocodedSchools.filter(\n      (school) => school.latitude && school.longitude\n    );\n    \n    if (schoolsWithCoords.length > 0) {\n      // Center on the first school with coordinates\n      setViewport({\n        center: [schoolsWithCoords[0].latitude!, schoolsWithCoords[0].longitude!],\n        zoom: 10,\n      });\n    }\n  };\n  \n  // Update viewport when a school is selected\n  useEffect(() => {\n    if (selectedSchool?.latitude && selectedSchool?.longitude) {\n      setViewport({\n        center: [selectedSchool.latitude, selectedSchool.longitude],\n        zoom: 14,\n      });\n    }\n  }, [selectedSchool]);\n\n  return (\n    <main className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white border-b border-gray-200\">\n        <div className=\"container-custom py-4\">\n          <h1 className=\"heading-1\">School Photography Client Map</h1>\n          <p className=\"text-gray-600 mt-1\">Visualize and manage your nationwide school photography clients</p>\n        </div>\n      </header>\n\n      <div className=\"container-custom py-8\">\n        {/* Top Controls */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n          <div className=\"card\">\n            <h2 className=\"heading-3 mb-4\">Import School Data</h2>\n            <CSVUpload onDataLoaded={handleDataLoaded} setLoading={setLoading} />\n          </div>\n          \n          <div className=\"card\">\n            <h2 className=\"heading-3 mb-4\">HubSpot Integration</h2>\n            <HubSpotIntegration \n              schools={schools} \n              onSchoolsLoaded={handleDataLoaded} \n              setLoading={setLoading} \n            />\n          </div>\n        </div>\n      \n        {/* Map and School List */}\n        <div className=\"grid grid-cols-1 md:grid-cols-12 gap-6 mb-8\">\n          {/* School List */}\n          <div className={`transition-all duration-300 ${\n            isListCollapsed ? 'md:col-span-1' : 'md:col-span-4'\n          }`}>\n            <SchoolList \n              schools={schools} \n              selectedSchool={selectedSchool} \n              setSelectedSchool={setSelectedSchool}\n              isCollapsed={isListCollapsed}\n              setIsCollapsed={setIsListCollapsed}\n            />\n          </div>\n          \n          {/* Map */}\n          <div className={`transition-all duration-300 rounded-lg overflow-hidden shadow-sm border border-gray-200 ${\n            isListCollapsed ? 'md:col-span-11' : 'md:col-span-8'\n          }`} style={{ minHeight: '600px' }}>\n            <Map schools={schools} viewport={viewport} />\n          </div>\n        </div>\n        \n        {/* Statistics Summary */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          <div className=\"card bg-white\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Total Schools</h3>\n            <p className=\"text-3xl font-bold text-indigo-600\">{schools.length}</p>\n            <p className=\"text-sm text-gray-500 mt-1\">Across your client database</p>\n          </div>\n          \n          <div className=\"card bg-white\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">States</h3>\n            <p className=\"text-3xl font-bold text-indigo-600\">\n              {Array.from(new Set(schools.map(school => school.state))).length}\n            </p>\n            <p className=\"text-sm text-gray-500 mt-1\">Geographic distribution</p>\n          </div>\n          \n          <div className=\"card bg-white\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Districts</h3>\n            <p className=\"text-3xl font-bold text-indigo-600\">\n              {Array.from(new Set(schools.map(school => school.district))).length}\n            </p>\n            <p className=\"text-sm text-gray-500 mt-1\">School districts represented</p>\n          </div>\n        </div>\n      </div>\n      \n      {/* Loading Overlay */}\n      {(loading || geocoding) && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\n            <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-indigo-600 mx-auto mb-4\"></div>\n            <p className=\"text-lg font-medium text-center text-gray-900\">{geocoding ? 'Geocoding addresses...' : 'Processing data...'}</p>\n            <p className=\"text-sm text-gray-600 text-center mt-2\">This may take a moment to complete</p>\n          </div>\n        </div>\n      )}\n      \n      {/* Footer */}\n      <footer className=\"bg-white border-t border-gray-200 mt-auto\">\n        <div className=\"container-custom py-4\">\n          <p className=\"text-gray-600 text-sm text-center\">\n            School Photography Client Map Dashboard &copy; {new Date().getFullYear()}\n          </p>\n        </div>\n      </footer>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}